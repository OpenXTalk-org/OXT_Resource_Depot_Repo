Library: org.openxtalk.hermann.clockaround

Type: widget

Summary:
ClockAround v125 [-hh fecit, Oct 2016/Oct 2018]

Widget 'ClockAround' displays an analogue clock. The clock has (optionally) FengShui-colored centers which are used depending on the time, see the (read only) property fengShuiColoring.
The current setting is:
_[from 05:00 to 10:00 color "morning green" = "0,204,153"]_,
_[from 10:00 to 12:00 color "forenoon red" = "255,102,0"]_,
_[from 12:00 to 15:00 color "noon yellow" = "255,204,102"]_,
_[from 15:00 to 17:00 color "afternoon white" = "255,255,255"]_,
_[from 17:00 to 22:00 color "evening light blue" = "102,102,255"]_,
_[from 22:00 to 05:00 color "night blue" = "0,0,255"]_.
The clock displays 24 hours (12:00 at bottom) or 12 hours around the clock.
The time may be chosen as local or with any offset to universal time (UTC).
This "timezone" uses in the property inspector only the built-in LC editor.
Full hour values are also available by RightClicking the inner ring of widget.
RightClicking the outer ring of the widget ("face") shows a menu of the four main settings.

You can show arcs, dots and hands for each of hours, minutes and seconds.
Dots overlay the tip of arcs, hands overlay dots.

The widget passes the following messages to LC Script (you can use them in your widget's script):
mouseDown (late), mouseEnter, mouseLeave, mouseUp.

version: 1.2.5

author: Hermann Hoch


Name: minutesArc

Type: property

Syntax: set the minutesArc of <widget> to <pTrueOrFalse>
get the minutesArc of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the minutesArc of widget "AClox" to not \
    the minutesArc of widget "AClox"

Summary: Controls the visibility of the minutes arc.

Description:
Use the minutesArc property to set the visibility of the minutes arc to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: secondsDot

Type: property

Syntax: set the secondsDot of <widget> to <pTrueOrFalse>
get the secondsDot of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the secondsDot of widget "AClox" to not \
    the secondsDot of widget "AClox"

Summary: Controls the visibility of the seconds dot.

Description:
Use the secondsDot property to set the visibility of the seconds dot to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: digitSize

Type: property

Syntax: set the digitSize of <widget> to <pInteger>
get the digitSize of <widget>

Parameters: 

pInteger: an integer > 9

Example:
set the digitSize of widget "AClox" to 13
get the digitSize of widget "AClox" -- returns 13

Summary: The size of the textual time display.

Description: Use the digitSize property to set the size of the textual time display (*if hands are not drawn*). The digitSize is limited to 0.25*the clockRadius.




Name: showDigital

Type: property

Syntax: set the showDigital of <widget> to <pTrueOrFalse>
get the showDigital of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the showDigital of widget "AClox" to not \
    the showDigital of widget "AClox"

Summary: Whether to show a centered digital time.

Description: Use the showDigital property to show/hide a digital time display *if no hands are drawn*.




Name: secondsHand

Type: property

Syntax: set the secondsHand of <widget> to <pTrueOrFalse>
get the secondsHand of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the secondsHand of widget "AClox" to not \
    the secondsHand of widget "AClox"

Summary: Controls the visibility of the seconds hand.

Description:
Use the secondsHand property to set the visibility of the seconds hand to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: showTicks

Type: property

Syntax: set the showTicks of <widget> to <pTrueOrFalse>
get the showTicks of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the showTicks of widget "AClox" to not \
    the showTicks of widget "AClox"

Summary: Controls the visibility of the clock's ticks.

Description: Use the showTicks property to set the visibility of the clock's ticks to true or false.




Name: minutesColor

Type: property

Syntax: set the minutesColor of <widget> to <pColor>
get the minutesColor of <widget>

Summary: Sets or gets the color of the minutes indicator (arc or hand or ball).

Parameters: 

pColor: The minutes-color, in RGB or RGBA format

Example:
set the minutesColor of widget "AClox" to "255,127,0"
-- returns a _four-item_ string
get the minutessColor of widget "AClox" -- "255,127,0,255"
set the minutesColor of widget "AClox" to "255,127,0,127"

Description:
Use the minutesColor property to set the color of the minutes arc or hand or ball.
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: minutesHand

Type: property

Syntax: set the minutesHand of <widget> to <pTrueOrFalse>
get the minutesHand of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the minutesHand of widget "AClox" to not \
    the minutesHand of widget "AClox"

Summary: Controls the visibility of the minutes hand.

Description:
Use the minutesHand property to set the visibility of the minutes hand to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: allowGrab

Type: property

Syntax: set the allowGrab of <widget> to <pTrueOrFalse>
get the allowGrab of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the allowGrab of widget "AClox" to not \
    the allowGrab of widget "AClox"

Summary: Whether to allow grabbing the widget.

Description: Use the allowGrab property to allow/disallow grabbing the widget by mouseDown.




Name: secondsColor

Type: property

Syntax: set the secondsColor of <widget> to <pColor>
get the secondsColor of <widget>

Summary: Sets or gets the color of the seconds indicator (arc or hand or ball).

Parameters: 

pColor: The seconds-color, in RGB or RGBA format

Example:
set the secondsColor of widget "AClox" to "255,127,0"
-- returns a _four-item_ string
get the secondsColor of widget "AClox" -- "255,127,0,255"
set the secondsColor of widget "AClox" to "255,127,0,127"

Description:
Use the secondsColor property to set the color of the seconds arc or hand or ball.
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: showOrigin24or12

Type: property

Syntax: set the showOrigin24or12 of <widget> to <pTrueOrFalse>
get the showOrigin24or12 of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the showOrigin24or12 of widget "AClox" to not \
    the showOrigin24or12 of widget "AClox"

Summary: Controls the visibility of the clock's origin, indicating 24-hours display (double) or 12-hours display (single).

Description:
Use the showOrigin24or12 property to set the visibility of the clock's origin to true or false. These are two overlapped disks if the 24-hours display is active, else it is one disk at the origin.
If one of hours hand, minute hand or seconds hand is visible and showOrigin24or12 is set to false then there is a "nub circle" drawn at the origin.



Name: faceColor

Type: property

Syntax: set the faceColor of <widget> to <pColor>
get the faceColor of <widget>

Summary: Sets or gets the face color (outer ring).

Parameters: 

pColor: The (outer ring's) face color, in RGB or RGBA format

Example:
set the faceColor of widget "AClox" to "255,127,0"
-- returns a _four-item_ string
get the faceColor of widget "AClox" -- "255,127,0,255"
set the faceColor of widget "AClox" to "255,127,0,127"

Description:
Use the faceColor property to set the color of the outer ring (the inner ring's color is owned by the widget's "FengShui colors").
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: centerColor

Type: property

Syntax: set the centerColor of <widget> to <pColor>
get the centerColor of <widget>

Summary: Sets or gets the center color (outer ring).

Parameters: 

pColor: The center color (inner ring), in RGB or RGBA format

Example:
set the centerColor of widget "AClox" to "255,127,0"
-- returns a _four-item_ string
get the centerColor of widget "AClox" -- "255,127,0,255"
set the centerColor of widget "AClox" to "255,127,0,127"

Description:
Use the centerColor property to set the color of the inner ring's color (if not owned by the widget's "FengShui colors", see property useFengShuiColors).
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: digitColor

Type: property

Syntax: set the digitColor of <widget> to <pColor>
get the digitColor of <widget>

Summary: Sets or gets the color of the digital display.

Parameters: 

pColor: The digit-color, in RGB or RGBA format

Example:
set the digitColor of widget "AClox" to "0,0,0"
 -- returns a _four-item_ string
get the digitColor of widget "AClox" -- "0,0,0,255"
set the digitColor of widget "AClox" to "0,0,0,127"

Description:
Use the digitColor property to set the color of the digital display (*if hands are not drawn*).
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: hoursDot

Type: property

Syntax: set the hoursDot of <widget> to <pTrueOrFalse>
get the hoursDot of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the hoursDot of widget "AClox" to not \
    the hoursDot of widget "AClox"

Summary: Controls the visibility of the hours dot.

Description:
Use the hoursDot property to set the visibility of the hours dot to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: useFengShuiColoring

Type: property

Syntax: set the useFengShuiColoring of widget "AClox" to <trueOrFalse>

Summary: Whether to use fengShuiColoring for the clock's face.

Example:
get the useFengShuiColoring of widget "AClox"
set the useFengShuiColoring of widget "AClox" to "true"

Description: Switch the useFengShuiColoring (see property fengShuiColoring) of the widget on/off.




Name: digitBackColor

Type: property

Syntax: set the digitBackColor of <widget> to <pColor>
get the digitBackColor of <widget>

Summary: Sets or gets the back color of the digital display.

Parameters: 

pColor: The digit-color, in RGB or RGBA format

Example:
set the digitBackColor of widget "AClox" to "0,0,0"
 -- returns a _four-item_ string
get the digitBackColor of widget "AClox" -- "0,0,0,255"
set the digitBackColor of widget "AClox" to "0,0,0,127"

Description:
Use the digitBackColor property to set the back color of the digital display (*if hands are not drawn*).
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: hoursArc

Type: property

Syntax: set the hoursArc of <widget> to <pTrueOrFalse>
get the hoursArc of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the hoursArc of widget "AClox" to not \
    the hoursArc of widget "AClox"

Summary: Controls the visibility of the hours arc.

Description:
Use the hoursArc property to set the visibility of the hours arc to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: clockRadius

Type: property

Syntax: set the clockRadius of <widget> to <integer>
get the clockRadius of <widget>

Parameters: 

positiveNumber: an integer > 31

Example:
set the clockRadius of widget "AClox" to 64
get the clockRadius of widget "AClox" -- returns 64

Summary: Control the size of the clock.

Description: Use the clockRadius property to set the radius of the clock's circle.




Name: timeZone

Type: property

Syntax: set the timeZone of <widget> to <pOffset>
get the timeZone of <widget>

Parameters: 

pOffset: is a number of seconds

Example:
-- set the offset to minus 2 hours and 30 minutes
-- 'the internet date' show this as "-0230"
set the timeZone of widget "AClox" to (-2*60 + 30)*60
-- returns the current offset from UTC in seconds
get the timeZone of widget "AClox"

Summary: The time zone offset from UTC in seconds. Default is your local offset.

Description:
Use the timeZone property to display the time of a timezone that may be different from
local time. If the timeZone property is set to empty, then the clock displays the local
time and get the timeZone returns the local UTC-offset.



Name: hoursHand

Type: property

Syntax: set the hoursHand of <widget> to <pTrueOrFalse>
get the hoursHand of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the hoursHand of widget "AClox" to not \
    the hoursHand of widget "AClox"

Summary: Controls the visibility of the hours hand.

Description:
Use the hoursHand property to set the visibility of the hours hand to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: fengShuiColoring

Type: property

Syntax: get the fengShuiColoring of <widget>
-- returns a 'header'-line and 7 value-lines of the form:
-- stopHour,name,colorRed,colorGreen,colorBlue
-- value-line 1 and 7 differ only in the first item.

Summary: Gets the "hour ramps" and the coloring in the hours range defined by that ramps.

Example: get the fengShuiColoring of widget "AClox"

Description:
Use the fengShuiColoring property to get an info, for example if you wish to adjust the hoursColor, minutesColor or secondsColor accordingly.
The format are seven lines of text of the form _stopHour, name, colorRed, colorGreen, colorBlue_
StopHour is an hour (an integer between 1 and 24), the color values are integers between 0 and 255.



Name: is24HoursDisplay

Type: property

Syntax: set the is24HoursDisplay of <widget> to <pTrueOrFalse>
get the is24HoursDisplay of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the is24HoursDisplay of widget "AClox" to not \
    the is24HoursDisplay of widget "AClox"

Summary: is24HoursDisplay divides, if set to true, the 360 degree circle into 24 parts, for the hours only, minutes and seconds are indicated as usual (60 minutes & 60 seconds per "round"). If is24HoursDisplay is set to false, the the 360 degree circle is divided into 12 hours & 60 minutes & 60 seconds per "round".

Description:
Use the is24HoursDisplay property to switch between a 24-hours clock and a 12-hours clock.
This choice is reflected by the clock's ticks and/or the clock's origin (if their visibility is set to true).



Name: secondsArc

Type: property

Syntax: set the secondsArc of <widget> to <pTrueOrFalse>
get the secondsArc of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the secondsArc of widget "AClox" to not \
    the secondsArc of widget "AClox"

Summary: Controls the visibility of the seconds arc.

Description:
Use the secondsArc property to set the visibility of the seconds arc to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: minutesDot

Type: property

Syntax: set the minutesDot of <widget> to <pTrueOrFalse>
get the minutesDot of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the minutesDot of widget "AClox" to not \
    the minutesDot of widget "AClox"

Summary: Controls the visibility of the minutes dot.

Description:
Use the minutesDot property to set the visibility of the minutes dot to true or false.
Dots overlay the tip of arcs, hands overlay dots.



Name: hoursColor

Type: property

Syntax: set the hoursColor of <widget> to <pColor>
get the hoursColor of <widget>

Summary: Sets or gets the color of the hours indicator (arc or hand or ball).

Parameters: 

pColor: The hours-color, in RGB or RGBA format

Example:
set the hoursColor of widget "AClox" to "255,127,0"
 -- returns a _four-item_ string
get the hoursColor of widget "AClox" -- "255,127,0,255"
set the hoursColor of widget "AClox" to "255,127,0,127"

Description:
Use the hoursColor property to set the color of the hours arc or hand or ball.
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: allowContextMenu

Type: property

Syntax: set the allowContextMenu of <widget> to <pTrueOrFalse>
get the allowContextMenu of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the allowContextMenu of widget "AClox" to not \
    the allowContextMenu of widget "AClox"

Summary: Whether to show a context menu (rightClick).

Description: Use the allowContextMenu property to allow/disallow the context menu for switching between modes (all arcs, all dots, all hands).




Name: ticksColor

Type: property

Syntax: set the ticksColor of <widget> to <pColor>
get the ticksColor of <widget>

Summary: Sets or gets the color of the clock's ticks.

Parameters: 

pColor: The ticks color, in RGB or RGBA format

Example:
set the ticksColor of widget "AClox" to "255,127,0"
-- returns a _four-item_ string
get the ticksColor of widget "AClox" -- "255,127,0,255"
set the ticksColor of widget "AClox" to "255,127,0,127"

Description:
Use the ticksColor property to set the color of the clock's ticks. The visibility of the ticks is controlled by the showTicks property.
The color is in the form of a 3 or 4 item string, the 4th optional item being the alpha value, all integers between 0 and 255.
[You may also use numbers containing a decimal point between 0.0 and 1.0, for example "0.2,0.1,0.2".
.: The "get" always returns _four_ items in the integer form (each in range 0-255). :.



Name: autoDigitSize

Type: property

Syntax: set the autoDigitSize of <widget> to <pTrueOrFalse>
get the autoDigitSize of <widget>

Parameters: 

pTrueOrFalse: is true or false

Example:
set the autoDigitSize of widget "AClox" to not \
    the autoDigitSize of widget "AClox"

Summary: Whether to automatic size the digital display (*if hands are not drawn*).

Description: Use the autoDigitSize property to set the digitSize to round(0.18*the clockRadius).




